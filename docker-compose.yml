services:
  # User Service
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8001:80"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-db:5432/user_db
    depends_on:
      - postgres-db
    networks:
      - app-network
    restart: always

  # Post Service
  post-service:
    build:
      context: ./post-service
    container_name: post-service
    ports:
      - "8002:80"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-db:5432/post_db
    depends_on:
      - postgres-db
    networks:
      - app-network
    restart: always

  # Comment Service
  comment-service:
    build:
      context: ./comment-service
    container_name: comment-service
    ports:
      - "8003:80"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-db:5432/comment_db
    depends_on:
      - postgres-db
    networks:
      - app-network
    restart: always

  # Gateway API
  gateway-api:
    build:
      context: ./gateway-api
    container_name: gateway-api
    ports:
      - "8000:80"
    environment:
      - USER_SERVICE_URL=http://user-service:80
      - POST_SERVICE_URL=http://post-service:80
      - COMMENT_SERVICE_URL=http://comment-service:80
    depends_on:
      - user-service
      - post-service
      - comment-service
    networks:
      - app-network
    restart: always

  # Kafka Broker
  message-broker:
    image: wurstmeister/kafka:latest
    container_name: message-broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "user-events:1:1,post-events:1:1,comment-events:1:1"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://message-broker:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
    networks:
      - app-network
    depends_on:
      - zookeeper
    restart: always

  # Zookeeper (for Kafka)
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: always

  # PostgreSQL
  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: blogUser123
      POSTGRES_PASSWORD: blogUser123@@
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - /init.sql:/docker-entrypoint-initsql.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
