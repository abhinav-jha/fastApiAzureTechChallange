version: '3.8'

services:
  # Zookeeper (for Kafka)
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: always

  # Kafka Broker
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    networks:
      - app-network
    depends_on:
      - zookeeper
    restart: always

  # Kafka Microservice (Topic Manager, Consumer/Producer logic)
  kafka-service:
    build:
      context: ./kafka-service
    container_name: kafka-service
    environment:
      - KAFKA_SERVER=kafka:9092
    ports:
      - "8003:8003"
    depends_on:
      - kafka
    networks:
      - app-network
    restart: always

  # User Service
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8001:80"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER_LOCAL}:${POSTGRES_PORT}/${POSTGRES_DB_USERSERVICE}
      - KAFKA_SERVER=kafka:9092
    networks:
      - app-network
    depends_on:
      - kafka
    restart: always

  # Post Service
  post-service:
    build:
      context: ./post-service
    container_name: post-service
    ports:
      - "8002:80"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER_LOCAL}:${POSTGRES_PORT}/${POSTGRES_DB_POSTSERVICE}
      - KAFKA_SERVER=kafka:9092
    networks:
      - app-network
    depends_on:
      - kafka
    restart: always

  # Gateway API
  gateway-api:
    build:
      context: ./gateway-api
    container_name: gateway-api
    ports:
      - "8000:80"
    environment:
      - USER_SERVICE_URL=http://user-service:80
      - POST_SERVICE_URL=http://post-service:80
    depends_on:
      - user-service
      - post-service
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
